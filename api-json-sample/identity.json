{
  "swagger": "2.0",
  "info": {
    "termsOfService": "https://delinea.com/terms-of-use",
    "title": "Delinea API",
    "description": "Please replace `tenantHostname` in the base URL above with your specific tenant's hostname in all API requests.",
    "contact": {
      "url": "https://www.delinea.com",
      "name": "Delinea"
    },
    "version": "6.1.963"
  },
  "x-explorer-enabled": true,
  "host": "tenantHostname.delinea.app",
  "basePath": "/identity/api",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "description": "Utility functions and basic ops",
      "name": "Core Services"
    },
    {
      "description": "Authenticate to cloud service, MFA",
      "name": "Authentication"
    },
    {
      "description": "Manage directory services",
      "name": "Directory Services"
    },
    {
      "description": "Manage users for all Directory Services (AD, Cloud, LDAP, etc)",
      "name": "User Management"
    },
    {
      "description": "Manage users for the Centrify Cloud Directory Service",
      "name": "Cloud User Management"
    },
    {
      "description": "Manage local group and admin rights",
      "name": "Local Group Management"
    }
  ],
  "paths": {
    "/AuthProfile/DeleteProfile": {
      "post": {
        "tags": [
          "Core Services",
          "Authentication"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Authentication UUID.",
            "name": "uuid"
          },
          {
            "schema": {
              "properties": {
                "uuid": {
                  "type": "string",
                  "description": "The authentication profile uuid either passed in by method call or as part of the payload."
                }
              },
              "required": [
                "uuid"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Deletes an authentication profile.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/AuthProfileDeleteProfile"
            }
          }
        }
      }
    },
    "/AuthProfile/GetProfile": {
      "post": {
        "tags": [
          "Core Services",
          "Authentication"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Profile UUID",
            "name": "uuid"
          },
          {
            "schema": {
              "properties": {
                "uuid": {
                  "type": "string",
                  "description": "The authentication profile uuid either passed in by method call or as part of the payload."
                }
              },
              "required": [
                "uuid"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "The profile get uses the uuid passed in by method call or as part of the payload.",
        "summary": "Gets an authentication profile.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/AuthProfileGetProfile"
            }
          }
        }
      }
    },
    "/AuthProfile/GetProfileList": {
      "post": {
        "tags": [
          "Core Services",
          "Authentication"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Gets a list of Authentication profiles.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/AuthProfileGetProfileList"
            }
          }
        }
      }
    },
    "/AuthProfile/SaveProfile": {
      "post": {
        "tags": [
          "Core Services",
          "Authentication"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "settings": {
                  "properties": {
                    "Challenges": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "description": "Selected authentication mechanisms."
                    },
                    "AdditionalData": {
                      "type": "object",
                      "description": "DataEntity with additional data (default=null)."
                    },
                    "Uuid": {
                      "type": "string",
                      "description": "Profile UUID."
                    },
                    "DurationInMinutes": {
                      "type": "integer",
                      "description": "How many minutes the profile is valid."
                    },
                    "Name": {
                      "type": "string",
                      "description": "Profile name."
                    }
                  },
                  "type": "object",
                  "description": "The authentication profile."
                }
              },
              "required": [
                "settings"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "If the profile contains a UUID an update is performed, otherwise it's a write.",
        "summary": "Saves an authentication profile.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/AuthProfileSaveProfile"
            }
          }
        }
      }
    },
    "/CDirectoryService/ChangeUser": {
      "post": {
        "tags": [
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "CmaRedirectedUserUuid": {
                  "type": "string",
                  "description": "MFA redirected user uuid.  You must be a system administrator or have user management permissions to change this field."
                },
                "HomeNumber": {
                  "type": "string",
                  "description": "User home number."
                },
                "AccountExp": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Account expires date/time.  You must be a system administrator or have user management permissions to change this field."
                },
                "ReportsTo": {
                  "type": "string",
                  "description": "User reports to this user UUID.  You must be a system administrator or have user management permissions to change this field."
                },
                "DisplayName": {
                  "type": "string",
                  "description": "User display name."
                },
                "PasswordNeverExpire": {
                  "type": "boolean",
                  "description": "Does user's password expire?  You must be a system administrator or have user management permissions to change this field."
                },
                "ID": {
                  "type": "string",
                  "description": "UUID of the cloud user to change (default=current user)."
                },
                "OfficeNumber": {
                  "type": "string",
                  "description": "User office number."
                },
                "MobileNumber": {
                  "type": "string",
                  "description": "User mobile number."
                },
                "InEverybodyRole": {
                  "type": "boolean",
                  "description": "Is user in the Everybody role?  You must be a system administrator or have user management permissions to change this field."
                },
                "ServiceUser": {
                  "type": "boolean",
                  "description": "User is a service user.  You must be a system administrator or have user management permissions to change this field."
                },
                "PreferredCulture": {
                  "type": "string",
                  "description": "User preferred culture."
                },
                "Mail": {
                  "type": "string",
                  "description": "User email.  You must be a system administrator or have user management permissions to change this field."
                },
                "Description": {
                  "type": "string",
                  "description": "User description."
                },
                "Name": {
                  "type": "string",
                  "description": "User name.  You must be a system administrator or have user management permissions to change this field."
                }
              },
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "User must be a cloud user.\n            Specified user must be you, you must be a system administrator or have user management permissions.\n            Specifying 'ServiceUser' will override the 'InEveryBodyRole' property if both are provided.",
        "summary": "Change cloud user properties.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CDirectoryServiceChangeUser"
            }
          }
        }
      }
    },
    "/CDirectoryService/CreateUser": {
      "post": {
        "tags": [
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Password": {
                  "type": "string",
                  "description": "Password of the user (default=randomly generated strong password)"
                },
                "CmaRedirectedUserUuid": {
                  "type": "string",
                  "description": "MFA Redirected user uuid"
                },
                "HomeNumber": {
                  "type": "string",
                  "description": "User's home number (default=null)"
                },
                "AccountExp": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Account expires date/time.  You must be a system administrator or have user management permissions to change this field."
                },
                "ReportsTo": {
                  "type": "string",
                  "description": "Uuid of user this user reports to (default=null)"
                },
                "PasswordNeverExpire": {
                  "type": "boolean",
                  "description": "User's password never expires (default=false)"
                },
                "DisplayName": {
                  "type": "string",
                  "description": "Display name of user (default=null)"
                },
                "Disabled": {
                  "type": "boolean",
                  "description": "User is disabled (default: false)"
                },
                "OfficeNumber": {
                  "type": "string",
                  "description": "User's office number (default=null)"
                },
                "ForcePasswordChangeNext": {
                  "type": "boolean",
                  "description": "Force password change at first login (default=true)"
                },
                "MobileNumber": {
                  "type": "string",
                  "description": "User's mobile number (default=null)"
                },
                "ServiceUser": {
                  "type": "boolean",
                  "description": "User is a service user (default=false)"
                },
                "Mail": {
                  "type": "string",
                  "description": "Email of user (default=null); note this field is required if 'SendEmailInvite' is true."
                },
                "Groups": {
                  "type": "string",
                  "description": "Comma separated list of local groups to add user to (default=null)"
                },
                "SendEmailInvite": {
                  "type": "boolean",
                  "description": "Send user an email invite to the portal (default=true)"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of user (default=null)"
                },
                "Name": {
                  "type": "string",
                  "description": "Name of user"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have user management permissions.",
        "summary": "Create a new user in the Cloud Directory Service.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CDirectoryServiceCreateUser"
            }
          }
        }
      }
    },
    "/CDirectoryService/CreateUserBulk": {
      "post": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Password": {
                  "type": "string",
                  "description": "Password of the user (default=randomly generated strong password)"
                },
                "CmaRedirectedUserUuid": {
                  "type": "string",
                  "description": "MFA Redirected user uuid"
                },
                "HomeNumber": {
                  "type": "string",
                  "description": "User's home number (default=null)"
                },
                "AccountExp": {
                  "format": "date-time",
                  "type": "string",
                  "description": "Account expires date/time.  You must be a system administrator or have user management permissions to change this field."
                },
                "ReportsTo": {
                  "type": "string",
                  "description": "Uuid of user this user reports to (default=null)"
                },
                "PasswordNeverExpire": {
                  "type": "boolean",
                  "description": "User's password never expires (default=false)"
                },
                "DisplayName": {
                  "type": "string",
                  "description": "Display name of user (default=null)"
                },
                "Disabled": {
                  "type": "boolean",
                  "description": "User is disabled (default: false)"
                },
                "OfficeNumber": {
                  "type": "string",
                  "description": "User's office number (default=null)"
                },
                "ForcePasswordChangeNext": {
                  "type": "boolean",
                  "description": "Force password change at first login (default=true)"
                },
                "MobileNumber": {
                  "type": "string",
                  "description": "User's mobile number (default=null)."
                },
                "ServiceUser": {
                  "type": "boolean",
                  "description": "User is a service user (default=false)"
                },
                "Mail": {
                  "type": "string",
                  "description": "Email of user (default=null); note this field is required if 'SendEmailInvite' is true."
                },
                "Groups": {
                  "type": "string",
                  "description": "Comma separated list of local groups to add user to (default=null)"
                },
                "SendEmailInvite": {
                  "type": "boolean",
                  "description": "Send user an email invite to the portal (default=true)"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of user (default=null)"
                },
                "Name": {
                  "type": "string",
                  "description": "Name of user"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have user management permissions.\n                The file(s) must conform to the following format:",
        "summary": "Create new users in the Cloud Directory Service based on data read from files.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CDirectoryServiceCreateUserBulk"
            }
          }
        }
      }
    },
    "/CDirectoryService/CreateUsers": {
      "post": {
        "tags": [
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "ForceInvite": {
                  "type": "boolean",
                  "description": "For email invites for all created users (default: false)"
                },
                "users": {
                  "items": {
                    "properties": {
                      "Password": {
                        "type": "string",
                        "description": "Password of the user (default=randomly generated strong password)."
                      },
                      "CmaRedirectedUserUuid": {
                        "type": "string",
                        "description": "MFA redirected user uuid."
                      },
                      "HomeNumber": {
                        "type": "string",
                        "description": "User's home number (default=null)."
                      },
                      "AccountExp": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Account expires date/time.  You must be a system administrator or have user management permissions to change this field."
                      },
                      "ReportsTo": {
                        "type": "string",
                        "description": "Uuid of user this user reports to (default=null)."
                      },
                      "PasswordNeverExpire": {
                        "type": "boolean",
                        "description": "User's password never expires (default=false)."
                      },
                      "DisplayName": {
                        "type": "string",
                        "description": "Display name of user (default=null)."
                      },
                      "Disabled": {
                        "type": "boolean",
                        "description": "User is disabled (default: false)"
                      },
                      "OfficeNumber": {
                        "type": "string",
                        "description": "User's office number (default=null)."
                      },
                      "ForcePasswordChangeNext": {
                        "type": "boolean",
                        "description": "Force password change at first login (default=true)."
                      },
                      "MobileNumber": {
                        "type": "string",
                        "description": "User's mobile number (default=null)."
                      },
                      "ServiceUser": {
                        "type": "boolean",
                        "description": "User is a service user (default=false)."
                      },
                      "Mail": {
                        "type": "string",
                        "description": "Email of user (default=null); note this field is required if 'SendEmailInvite' is true."
                      },
                      "Groups": {
                        "type": "string",
                        "description": "Comma separated list of local groups to add user to (default=null)"
                      },
                      "SendEmailInvite": {
                        "type": "boolean",
                        "description": "Send user an email invite to the portal (default=true)."
                      },
                      "Description": {
                        "type": "string",
                        "description": "Description of user (default=null)."
                      },
                      "Name": {
                        "type": "string",
                        "description": "Name of user."
                      }
                    },
                    "type": "object",
                    "description": "Information describing the user to be created."
                  },
                  "type": "array",
                  "description": "List of users to create."
                }
              },
              "required": [
                "users"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have user management permissions.",
        "summary": "Create new users in the Cloud Directory Service.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CDirectoryServiceCreateUsers"
            }
          }
        }
      }
    },
    "/CDirectoryService/ExemptUserFromMfa": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "User UUID to except from MFA",
            "name": "ID"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "description": "Amount of time to exempt the user from MFA (default=10 minutes)",
            "name": "timespan"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have user management permissions.  User is exempt from MFA login for a specified amount of time.",
        "summary": "Exempt a specified user from MFA login for a period of time.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CDirectoryServiceExemptUserFromMfa"
            }
          }
        }
      }
    },
    "/CDirectoryService/GetUser": {
      "post": {
        "tags": [
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "ID": {
                  "type": "string",
                  "description": "UUID of the cloud user to fetch (default=current user)."
                }
              },
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "Specified user must be you, you must be a system administrator, or have user management permissions.",
        "summary": "Get details for a specified cloud user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CDirectoryServiceGetUser"
            }
          }
        }
      }
    },
    "/CDirectoryService/GetUserAttributes": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Get details for the current user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CDirectoryServiceGetUserAttributes"
            }
          }
        }
      }
    },
    "/CDirectoryService/GetUserByName": {
      "post": {
        "tags": [
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "username": {
                  "type": "string",
                  "description": "User name of the cloud user to fetch (default=current user)."
                }
              },
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "Specified user must be you, you must be a system administrator, or have user management permissions.",
        "summary": "Get details for a specified user by name.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CDirectoryServiceGetUserByName"
            }
          }
        }
      }
    },
    "/CDirectoryService/GetUsers": {
      "post": {
        "tags": [
          "Cloud User Management"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Get all cloud users.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CDirectoryServiceGetUsers"
            }
          }
        }
      }
    },
    "/CDirectoryService/RefreshToken": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management",
          "Authentication",
          "Directory Services"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "User UUID to refresh",
            "name": "ID"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "UUID of the user's directory service (default=null)",
            "name": "directoryServiceUuid"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have user management permissions.  User cached identity in the cloud is reloaded from their directory service.\n            Useful when user details have changed in their remote directory service, but have not yet been pushed to the cloud.",
        "summary": "Refresh a user's cached identity.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CDirectoryServiceRefreshToken"
            }
          }
        }
      }
    },
    "/CDirectoryService/SetUserPicture": {
      "post": {
        "tags": [
          "Cloud User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "User UUID",
            "name": "ID"
          },
          {
            "schema": {
              "properties": {
                "File": {
                  "type": "object",
                  "description": "File containing the users picture, in the form-data.  (Not as a parameter.)"
                }
              },
              "required": [
                "File"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "Specified user must be you, you must be a system administrator or have user management permissions.\n                The file is attached to the call so need to figure out how to document that without bodyargs",
        "summary": "Set a cloud user's picture file.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CDirectoryServiceSetUserPicture"
            }
          }
        }
      }
    },
    "/CDirectoryService/SetUserState": {
      "post": {
        "tags": [
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "ID": {
                  "type": "string",
                  "description": "UUID of the cloud user to change."
                },
                "state": {
                  "type": "string",
                  "description": "New state of the user."
                }
              },
              "required": [
                "ID",
                "state"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have user management permissions.  Specified cloud user may not be the default system adminstrator.\n            Specified new state may either be 'None' or include one or more of the following values (comma separated): Locked, Disabled, or Expired.",
        "summary": "Set user State (locked, disabled, expired) for a specified cloud user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CDirectoryServiceSetUserState"
            }
          }
        }
      }
    },
    "/Core/AddEntraIDInstance": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "TenantId": {
                  "type": "string",
                  "description": "Entra TenantId."
                },
                "DomainName": {
                  "type": "string",
                  "description": "Domain Name of Entra ID tenant."
                }
              },
              "required": [
                "TenantId",
                "DomainName"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Add a new Entra ID instance.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreAddEntraIDInstance"
            }
          }
        }
      }
    },
    "/Core/AddPremDetectRange": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "IP range to add.",
            "name": "value"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "An old IP range to remove. If there is one.",
            "name": "oldvalue"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "What label to give this IP range.",
            "name": "label"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Adds an IP Range local to the customer network.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreAddPremDetectRange"
            }
          }
        }
      }
    },
    "/Core/DeleteProxies": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Proxies": {
                  "type": "string",
                  "description": "A list of connector Uuid's for removal."
                }
              },
              "required": [
                "Proxies"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Deletes a list of proxies.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreDeleteProxies"
            }
          }
        }
      }
    },
    "/Core/DeleteProxy": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Uuid of the connector being removed.",
            "name": "proxyUuid"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Remove a connector referred to by proxyUuid.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreDeleteProxy"
            }
          }
        }
      }
    },
    "/Core/DeleteProxyCode": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Code": {
                  "type": "string",
                  "description": "The code to remove"
                }
              },
              "required": [
                "Code"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Deletes a connector registration code.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreDeleteProxyCode"
            }
          }
        }
      }
    },
    "/Core/DeleteProxyCodes": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Codes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "A list of proxy registration codes to delete."
                }
              },
              "required": [
                "Codes"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Deletes a list of connector registration codes.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreDeleteProxyCodes"
            }
          }
        }
      }
    },
    "/Core/DelPremDetectRange": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "IP range to remove.",
            "name": "value"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Deletes an IP Range local to the customer network.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreDelPremDetectRange"
            }
          }
        }
      }
    },
    "/Core/GenerateNewProxyCode": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "MaxUses": {
                  "default": 1,
                  "type": "integer",
                  "description": "Maximum number of uses for the code."
                },
                "Expires": {
                  "type": "object",
                  "description": "Date-Time of when this code will expire. Expires trumps Duration if both are specified."
                },
                "Duration": {
                  "type": "object",
                  "description": "Time-Span setting how long is the code is valid (0.00:00:00=infinite)."
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the code (for UI presentation)."
                },
                "Name": {
                  "type": "string",
                  "description": "Name of the code (for UI presentaion)."
                }
              },
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Generates a new connector registration code.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreGenerateNewProxyCode"
            }
          }
        }
      }
    },
    "/Core/GeneratePassword": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "How long is the generated password.",
            "name": "passwordLength"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Don't use policy to restrict password length",
            "name": "excludePolicy"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Generates a password.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreGeneratePassword"
            }
          }
        }
      }
    },
    "/Core/GetDirectoryServices": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Optionally return results in UI format. Default true.",
            "name": "uiFormat"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Gets the directory services.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreGetDirectoryServices"
            }
          }
        }
      }
    },
    "/Core/GetPremDetectRanges": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Gets the IP Ranges local to the customer network.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreGetPremDetectRanges"
            }
          }
        }
      }
    },
    "/Core/GetProxies": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "RRFormat": {
                  "default": false,
                  "type": "boolean",
                  "description": "Whether to return data in Redrock format"
                }
              },
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Gets list of connectors.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreGetProxies"
            }
          }
        }
      }
    },
    "/Core/GetProxyCode": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Code": {
                  "type": "string",
                  "description": "The code to reterive"
                }
              },
              "required": [
                "Code"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Fetchs a connector registration code along with its settings.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreGetProxyCode"
            }
          }
        }
      }
    },
    "/Core/GetProxyCodes": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Fetchs a standard UI report that contains all of the connector registration codes.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreGetProxyCodes"
            }
          }
        }
      }
    },
    "/Core/GetProxyIwaHostCertificateFile": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The connector unique identifier.",
            "name": "proxyUuid"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Certificate file name.",
            "name": "filename"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Get the connector Iwa host certificate file.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreGetProxyIwaHostCertificateFile"
            }
          }
        }
      }
    },
    "/Core/GetProxySettings": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The connector Uuid.",
            "name": "proxyUuid"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Gets the settings for the connector Uuid.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreGetProxySettings"
            }
          }
        }
      }
    },
    "/Core/PingProxy": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The ID of the cloud connector to ping.",
            "name": "proxyUuid"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Pings a proxy.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CorePingProxy"
            }
          }
        }
      }
    },
    "/Core/RemoveEntraIDInstance": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Uuid of the instance being removed.",
            "name": "instanceId"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Remove an Entra ID instance by instanceId.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreRemoveEntraIDInstance"
            }
          }
        }
      }
    },
    "/Core/SetProxyIwaHostCertificateFile": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The connector's Uuid",
            "name": "proxyUuid"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The password to the cert.",
            "name": "passwd"
          },
          {
            "schema": {
              "properties": {
                "cert": {
                  "type": "string",
                  "description": "The certificate file for the connector."
                }
              },
              "required": [
                "cert"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Set the certificate for the Iwa connector.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreSetProxyIwaHostCertificateFile"
            }
          }
        }
      }
    },
    "/Core/UpdateDirectoryServicesPrecedence": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "precedence": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "Directory services precedence to use."
                }
              },
              "required": [
                "precedence"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "This changes the search order of services used when authenticating a customer.",
        "summary": "Updates the directory services stack for a tenant.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreUpdateDirectoryServicesPrecedence"
            }
          }
        }
      }
    },
    "/Core/UpdateProxyCode": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "MaxUses": {
                  "default": 1,
                  "type": "integer",
                  "description": "Maximum number times this code can be used. Set to 0 for 'Unlimited'."
                },
                "Expires": {
                  "type": "object",
                  "description": "Date-Time of when this code will expire. Set to '9999-12-31T23:59:59.9999999Z' for 'Never Expires'."
                },
                "Code": {
                  "type": "string",
                  "description": "The code to update."
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the code (for UI presentation)."
                },
                "Name": {
                  "type": "string",
                  "description": "Name of the code (for UI presentaion)."
                }
              },
              "required": [
                "Code"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Updates an existing connector registration code.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreUpdateProxyCode"
            }
          }
        }
      }
    },
    "/Core/UpdateProxySettings": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Password": {
                  "type": "boolean",
                  "description": "The password for the IWA cert, if required."
                },
                "HttpPort": {
                  "type": "integer",
                  "description": "Hyper text transport port number."
                },
                "Port": {
                  "type": "integer",
                  "description": "Port number for the connector."
                },
                "WebProxyEnabled": {
                  "type": "boolean",
                  "description": "Should the web connector be enabled."
                },
                "ProxyUuid": {
                  "type": "string",
                  "description": "THe proxy UUID to update settings for."
                },
                "WebProxyPort": {
                  "type": "integer",
                  "description": "The port used by the web connector."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Is the connector enabled."
                },
                "IwaCheckTimeout": {
                  "type": "integer",
                  "description": "The Iwa timeout value to use."
                },
                "Name": {
                  "type": "string",
                  "description": "The proxies name."
                },
                "Hostname": {
                  "type": "string",
                  "description": "The host name of the connector."
                }
              },
              "required": [
                "ProxyUuid"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Updates the connector settings.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/CoreUpdateProxySettings"
            }
          }
        }
      }
    },
    "/entities/directorygroups": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Starts with pattern to match against name or display name",
            "name": "filter"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Limit results to directory service matching this UUID, default null (all directories)",
            "name": "directoryUuid"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Query for directory groups by name or display name",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitiesdirectorygroups"
            }
          }
        }
      }
    },
    "/entities/directorygroups/{idOrName}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "description": "Group ID or name",
            "name": "idOrName"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Fetch a directory group by id or name",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitiesdirectorygroupsidOrName"
            }
          }
        }
      }
    },
    "/entities/directorygroups/{idOrName}/membership": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "description": "Group ID or name",
            "name": "idOrName"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Limit results to directory service matching this UUID, default null (all directories)",
            "name": "directoryUuid"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Fetch directory group membership by id or name",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitiesdirectorygroupsidOrNamemembership"
            }
          }
        }
      }
    },
    "/entities/fetchbulk": {
      "post": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "directoryUuid": {
                  "type": "string",
                  "description": "Limit results to directory service matching this UUID, default null (all directories)"
                },
                "detail": {
                  "type": "boolean",
                  "description": "Return extended details (may include PII), default false"
                },
                "directoryGroups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of directory group uuids to fetch"
                },
                "users": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of user uuids to fetch"
                },
                "entities": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of entity (user, directory group, local group) uuids to fetch"
                },
                "groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of group (directory or local group) uuids to fetch"
                },
                "localGroups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of local group uuids to fetch"
                }
              },
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.\n            At least 1 of users, directorygroups, localgroups, groups, or entities is required.\n            Maximum entities per request is limited (tenant config, default 1000).",
        "summary": "Bulk fetch entities by UUID; can provide lists of users, groups, and/or entities",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitiesfetchbulk"
            }
          }
        }
      }
    },
    "/entities/group": {
      "delete": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "ID of group to delete",
            "name": "id"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "UUID, default null (local)",
            "name": "directoryUuid"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Delete a local group or remove an allowed group",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitiesgroup"
            }
          }
        }
      }
    },
    "/entities/groups": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Starts with pattern to match against name or display name",
            "name": "filter"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Limit results to directory service matching this UUID, default null (all directories)",
            "name": "directoryUuid"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Query for Directory or Local groups by name or display name",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitiesgroups"
            }
          }
        }
      }
    },
    "/entities/groups/{idOrName}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "description": "Group ID or name",
            "name": "idOrName"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Fetch a directory or Local group by id or name",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitiesgroupsidOrName"
            }
          }
        }
      }
    },
    "/entities/groups/{idOrName}/membership": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "description": "Group ID or name",
            "name": "idOrName"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Limit results to directory service matching this UUID, default null (all directories)",
            "name": "directoryUuid"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Fetch directory or Local group membership by id or name",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitiesgroupsidOrNamemembership"
            }
          }
        }
      }
    },
    "/entities/localgroups": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Starts with pattern to match against name or display name",
            "name": "filter"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Query for Local groups by name or display name; supports null filter",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitieslocalgroups"
            }
          }
        }
      }
    },
    "/entities/localgroups/{idOrName}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "description": "Group ID or name",
            "name": "idOrName"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Fetch an Local group by id or name",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitieslocalgroupsidOrName"
            }
          }
        }
      }
    },
    "/entities/localgroups/{idOrName}/membership": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "description": "Group ID or name",
            "name": "idOrName"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Limit results to the directory service matching this UUID, default null (all directories)",
            "name": "directoryUuid"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Fetch Local group membership by id or name",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitieslocalgroupsidOrNamemembership"
            }
          }
        }
      }
    },
    "/entities/localusers": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Starts with pattern to match against name or display name",
            "name": "filter"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Return extended details (may include PII), default false",
            "name": "detail"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Query for local users by name or display name; supports no filter",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitieslocalusers"
            }
          }
        }
      }
    },
    "/entities/query": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Starts with pattern to match against name or display name",
            "name": "filter"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Return extended details (may include PII), default false",
            "name": "detail"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Limit results to directory service matching this UUID, default null (all directories)",
            "name": "directoryUuid"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Query for Users, Directory, and Local groups by name or display name",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitiesquery"
            }
          }
        }
      }
    },
    "/entities/users": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Starts with pattern to match against name or display name",
            "name": "filter"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Return extended details (may include PII), default false",
            "name": "detail"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Limit results to directory service matching this UUID, default null (all directories)",
            "name": "directoryUuid"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Query for users by name or display name",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitiesusers"
            }
          }
        }
      }
    },
    "/entities/users/{idOrName}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "description": "User ID or name",
            "name": "idOrName"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Limit results to directory service matching this UUID, default null (all directories)",
            "name": "directoryUuid"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Return extended details (may include PII), default false",
            "name": "detail"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Fetch a user by id or name",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitiesusersidOrName"
            }
          }
        }
      }
    },
    "/entities/users/{idOrName}/directorygroups": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "description": "User ID or name",
            "name": "idOrName"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Limit results to directory service matching this UUID, default null (all directories)",
            "name": "directoryUuid"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Fetch a user's directory groups",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitiesusersidOrNamedirectorygroups"
            }
          }
        }
      }
    },
    "/entities/users/{idOrName}/groups": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "description": "User ID or name",
            "name": "idOrName"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Limit results to directory service matching this UUID, default null (all directories)",
            "name": "directoryUuid"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Fetch a user's groups (Local and Directory)",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitiesusersidOrNamegroups"
            }
          }
        }
      }
    },
    "/entities/users/{idOrName}/localgroups": {
      "get": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "description": "User ID or name",
            "name": "idOrName"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Limit results to directory service matching this UUID, default null (all directories)",
            "name": "directoryUuid"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be an administrator or be a Platform service.",
        "summary": "Fetch a user's local groups",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/entitiesusersidOrNamelocalgroups"
            }
          }
        }
      }
    },
    "/Health/Check": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": true,
        "summary": "Simple health check for load balancers: Is this node active?",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/HealthCheck"
            }
          }
        }
      }
    },
    "/Internal/AddUsersAndGroupsToLocalGroup": {
      "post": {
        "tags": [
          "Local Group Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "LocalGroups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of localgroup UUIDs or Names to add to the localgroup (default=null)"
                },
                "Users": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of user UUIDs or Names to add to the localgroup (default=null)"
                },
                "LocalGroupUuid": {
                  "type": "string",
                  "description": "LocalGroup UUID"
                },
                "Groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of group UUIDs or Names to add to the localgroup (default=null)"
                }
              },
              "required": [
                "LocalGroupUuid"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Add principals to localgroup.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/InternalAddUsersAndGroupsToLocalGroup"
            }
          }
        }
      }
    },
    "/LocalGroups/AddUsersAndGroupsToLocalGroup": {
      "post": {
        "tags": [
          "Local Group Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "LocalGroups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of localgroup UUIDs or Names to add to the localgroup (default=null)"
                },
                "CheckPrincipalTypes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of Principals Type whether to check (default=null)"
                },
                "Users": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of user UUIDs or Names to add to the localgroup (default=null)"
                },
                "Groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of group UUIDs or Names to add to the localgroup (default=null)"
                },
                "Name": {
                  "type": "string",
                  "description": "LocalGroup UUID"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have localgroup management permissions.",
        "summary": "Add principals to localgroup.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/LocalGroupsAddUsersAndGroupsToLocalGroup"
            }
          }
        }
      }
    },
    "/LocalGroups/DeleteLocalGroup": {
      "post": {
        "tags": [
          "Local Group Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "LocalGroup UUID",
            "name": "Name"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have localgroup management permissions.",
        "summary": "Delete a localgroup.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/LocalGroupsDeleteLocalGroup"
            }
          }
        }
      }
    },
    "/LocalGroups/DeleteLocalGroups": {
      "post": {
        "tags": [
          "Local Group Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "items": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of localgroup UUIDs to delete"
                }
              },
              "required": [
                "items"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have localgroup management permissions.",
        "summary": "Delete a list of LocalGroups.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/LocalGroupsDeleteLocalGroups"
            }
          }
        }
      }
    },
    "/LocalGroups/GetLocalGroup": {
      "post": {
        "tags": [
          "Local Group Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "LocalGroup UUID",
            "name": "Name"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "If true, the principals list will not be included (may make this call much faster)",
            "name": "SuppressPrincipalsList"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have localgroup management permissions.",
        "summary": "Fetch a LocalGroup.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/LocalGroupsGetLocalGroup"
            }
          }
        }
      }
    },
    "/LocalGroups/GetLocalGroupMembers": {
      "post": {
        "tags": [
          "Local Group Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "LocalGroup UUID",
            "name": "Name"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have localgroup management permissions.",
        "summary": "Fetch a LocalGroup's principals.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/LocalGroupsGetLocalGroupMembers"
            }
          }
        }
      }
    },
    "/LocalGroups/GetPagedLocalGroupMembers": {
      "post": {
        "tags": [
          "Local Group Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Args": {
                  "properties": {
                    "FilterValue": {
                      "type": "string",
                      "description": "filter the users containing this value"
                    },
                    "PageNumber": {
                      "type": "integer",
                      "description": "number of users to skip"
                    },
                    "Ascending": {
                      "type": "string",
                      "description": "the order of the sorting"
                    },
                    "FilterBy": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "description": "filter the users - search query - by these cols. Only checks for presence, and uses FilterValue on username. Actual value is ignored."
                    },
                    "PageSize": {
                      "type": "integer",
                      "description": "number of users to fetch"
                    },
                    "SortBy": {
                      "type": "string",
                      "description": "sort the users by this property value"
                    }
                  },
                  "type": "object",
                  "description": "Paging, Sorting, and Filtering options."
                },
                "name": {
                  "type": "string",
                  "description": "UUID of the localgroup"
                }
              },
              "required": [
                "Args",
                "name"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Get the users for the specfied localgroup id and return the paged results.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/LocalGroupsGetPagedLocalGroupMembers"
            }
          }
        }
      }
    },
    "/LocalGroups/RemoveUsersAndGroupsFromLocalGroup": {
      "post": {
        "tags": [
          "Local Group Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "LocalGroups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of localgroup UUIDs or Names to add remove from localgroup (default=null)"
                },
                "Users": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of user UUIDs or Names to remove from the localgroup (default=null)"
                },
                "Groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of group UUIDs or Names to remove from the localgroup (default=null)"
                },
                "Name": {
                  "type": "string",
                  "description": "LocalGroup UUID"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have localgroup management permissions.",
        "summary": "Remove principals from localgroup.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/LocalGroupsRemoveUsersAndGroupsFromLocalGroup"
            }
          }
        }
      }
    },
    "/LocalGroups/StoreLocalGroup": {
      "post": {
        "tags": [
          "Local Group Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "LocalGroups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of localgroup UUIDs or Names to add to the localgroup (default=null)"
                },
                "CheckPrincipalTypes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of Principal Types whether to check (default=null)"
                },
                "Users": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of user UUIDs or Names to add to the localgroup (default=null)"
                },
                "Groups": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of group UUIDs or Names to add to the localgroup (default=null)"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the localgroup (default=null)"
                },
                "Name": {
                  "type": "string",
                  "description": "Name of the localgroup to create. Limit to 1024 characters."
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have localgroup management permissions.",
        "summary": "Create a Principal List localgroup.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/LocalGroupsStoreLocalGroup"
            }
          }
        }
      }
    },
    "/LocalGroups/UpdateLocalGroup": {
      "post": {
        "tags": [
          "Local Group Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "LocalGroups": {
                  "type": "object",
                  "description": "DataEntity containing two lists (Add and Delete, both optional) of localgroup names or UUIDs to add or remove from the localgroup (default=null)"
                },
                "CheckPrincipalTypes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of Principals Type whether to check (default=null)"
                },
                "Users": {
                  "type": "object",
                  "description": "DataEntity containing two lists (Add and Delete, both optional) of user names or UUIDs to add or remove from the localgroup (default=null)"
                },
                "Groups": {
                  "type": "object",
                  "description": "DataEntity containing two lists (Add and Delete, both optional) of group names or UUIDs to add or remove from the localgroup (default=null)"
                },
                "Description": {
                  "type": "string",
                  "description": "Description of the localgroup (default=null)"
                },
                "Name": {
                  "type": "string",
                  "description": "UUID of the localgroup to update"
                }
              },
              "required": [
                "Name"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have localgroup management permissions.",
        "summary": "Update specific attributes of a LocalGroup, leaving the rest unchanged.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/LocalGroupsUpdateLocalGroup"
            }
          }
        }
      }
    },
    "/Oath/AddOrUpdateProfile": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Period": {
                  "default": 30,
                  "type": "integer",
                  "description": "Time step (in seconds)."
                },
                "UserPrincipalName": {
                  "type": "string",
                  "description": "The user's principal name."
                },
                "SecretKey": {
                  "type": "string",
                  "description": "The profile secret."
                },
                "Algorithm": {
                  "type": "string",
                  "description": "The HMAC algorithm."
                },
                "OTPDigits": {
                  "default": 6,
                  "type": "integer",
                  "description": "The number of OTP code digits."
                },
                "Issuer": {
                  "default": "Import by admin",
                  "type": "string",
                  "description": "The issuer."
                },
                "Counter": {
                  "type": "integer",
                  "description": "Only used for HOTP."
                },
                "TokenIdentifier": {
                  "type": "string",
                  "description": "The user's token identifier."
                },
                "Type": {
                  "default": "Totp",
                  "type": "string",
                  "description": "The oath type (Totp, Hotp)"
                },
                "AccountName": {
                  "type": "string",
                  "description": "The profile account name."
                }
              },
              "required": [
                "UserPrincipalName",
                "SecretKey"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Add a single OATH profile to a specific user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OathAddOrUpdateProfile"
            }
          }
        }
      }
    },
    "/Oath/DeleteProfiles": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Uuids": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "A list of profile unique identifiers to delete."
                }
              },
              "required": [
                "Uuids"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Delete a list of profiles.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OathDeleteProfiles"
            }
          }
        }
      }
    },
    "/Oath/GetAllProfilesList": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Get all profiles list.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OathGetAllProfilesList"
            }
          }
        }
      }
    },
    "/Oath/GetDataFromCsvFile": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "FileName": {
                  "type": "object",
                  "description": "File containing the data to be read."
                }
              },
              "required": [
                "FileName"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Gets data from a csv file.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OathGetDataFromCsvFile"
            }
          }
        }
      }
    },
    "/Oath/GetProfileList": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Gets the profile list for the user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OathGetProfileList"
            }
          }
        }
      }
    },
    "/Oath/GetProfileListForDevice": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Gets the oath profile list for a device.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OathGetProfileListForDevice"
            }
          }
        }
      }
    },
    "/Oath/GetUserThirdPartyOtp": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "description": "Operates on current user only.",
        "summary": "Fetch data for initalizing a 3rd party OTP application, like Google Authenticator",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OathGetUserThirdPartyOtp"
            }
          }
        }
      }
    },
    "/Oath/ResetCentrifyOathProfile": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Uuid": {
                  "type": "string",
                  "description": "The unique identifier for the user who's default OATH profile will be reset."
                }
              },
              "required": [
                "Uuid"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Resets the Centrify OATH profile.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OathResetCentrifyOathProfile"
            }
          }
        }
      }
    },
    "/Oath/ResynchronizeOathToken": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The first of two consecutive token codes that will be used to resynchronize the token.",
            "name": "firstCode"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The second of two consecutive token codes that will be used to resynchronize the token.",
            "name": "secondCode"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The UUID of the token to be resynchronized.",
            "name": "tokenId"
          },
          {
            "schema": {
              "properties": {
                "firstCode": {
                  "type": "string",
                  "description": "The first of two consecutive token codes that will be used to resynchronize the token"
                },
                "secondCode": {
                  "type": "string",
                  "description": "The second of two consecutive token codes that will be used to resynchronize the token"
                },
                "tokenId": {
                  "type": "string",
                  "description": "The UUID of the token to be resynchronized"
                }
              },
              "required": [
                "firstCode",
                "secondCode",
                "tokenId"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "Resynchronizing requires two consecutive token codes\n             (which helps to ensure that the caller is in physical possesion of the token, not just of a\n             single copied token code).  Assuming that the supplied token codes can be found, TOTP resync\n             will compute a new interval delta value that will be stored with the token, and HOTP resync\n             will find the matching counter value (always looking forward, never backward) and update\n             the counter stored with the token.\n            \n             Caller must either own the OATH token or be an administrator",
        "summary": "Resynchronize a TOTP or HOTP token.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OathResynchronizeOathToken"
            }
          }
        }
      }
    },
    "/Oath/SaveProfile": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Version": {
                  "type": "integer",
                  "description": "The profile version."
                },
                "Period": {
                  "default": 0,
                  "type": "integer",
                  "description": "Time step (in seconds)."
                },
                "Digits": {
                  "default": 0,
                  "type": "integer",
                  "description": "The number of OTP code digits."
                },
                "Uuid": {
                  "type": "string",
                  "description": "The issuer's unique identifier."
                },
                "DeviceId": {
                  "type": "string",
                  "description": "The device id to associate with this profile."
                },
                "Base32Secret": {
                  "type": "string",
                  "description": "The profile secret. Mandatory for the new profile."
                },
                "Algorithm": {
                  "default": "Sha1",
                  "type": "string",
                  "description": "The HMAC algorithm."
                },
                "IntervalDelta": {
                  "default": 0,
                  "type": "integer",
                  "description": "The known delta for this token."
                },
                "Issuer": {
                  "type": "string",
                  "description": "The issuer."
                },
                "AuthEndPointUrl": {
                  "type": "string",
                  "description": "The client can visit this url to submit their OTP code."
                },
                "Counter": {
                  "type": "integer",
                  "description": "Only used for HOTP."
                },
                "Type": {
                  "default": "Totp",
                  "type": "string",
                  "description": "The oath type (Totp, Hotp)"
                },
                "IsImportByAdmin": {
                  "type": "boolean",
                  "description": "Is this prfile imported by the admin."
                },
                "AccountName": {
                  "type": "string",
                  "description": "The profile account name."
                }
              },
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Save or update not default profile for current user.\n            Uuid should be provided for the existing profile and omitted for the new profile\n            Provided profile's Uuid should not be equal to User's Uuid as it is used for default User's profile Uuid",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OathSaveProfile"
            }
          }
        }
      }
    },
    "/Oath/UpdateOathProfileCounter": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Uuid": {
                  "type": "string",
                  "description": "The unique identifier for the profile."
                },
                "Counter": {
                  "type": "integer",
                  "description": "The value to use when setting the profile counter."
                }
              },
              "required": [
                "Uuid",
                "Counter"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Update the oath profile counter.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OathUpdateOathProfileCounter"
            }
          }
        }
      }
    },
    "/Oath/ValidateAndSetUserThirdPartyOtp": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Unique identifier for the user's OATH profile.",
            "name": "uuid"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "OATH OTP from the application.",
            "name": "otpCode"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Validate the user's 3rd party otp code and save their profile if needed (new profile)",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OathValidateAndSetUserThirdPartyOtp"
            }
          }
        }
      }
    },
    "/Oath/ValidateOtpCode": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Unique identifier for the profile.",
            "name": "uuid"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Oath profile password.",
            "name": "otpCode"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Should oath defaults be used.",
            "name": "useOathDefaults"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Validate the otp code.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OathValidateOtpCode"
            }
          }
        }
      }
    },
    "/OAuth2/Authorize": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Value used to determine if authentication has occured.",
            "name": "bounce"
          },
          {
            "schema": {
              "properties": {},
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": true,
        "description": "Calls defined by RFC(s).  May alternately redirect to another login page or throw an exceptoin depending on success.\n            See the OAuth2 spec https://oauth.net/2/",
        "summary": "Authenticates a request.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OAuth2Authorize"
            }
          }
        }
      }
    },
    "/OAuth2/DeviceCode": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "acr_values": {
                  "type": "string",
                  "description": "auth profile uuid for stepup auth"
                },
                "su_token": {
                  "type": "string",
                  "description": "step up token of orginal API call"
                },
                "long_lived_requestor": {
                  "type": "string",
                  "description": "Requestor type of a long lived session"
                },
                "client_id": {
                  "type": "string",
                  "description": "Client requesting device flow"
                },
                "username": {
                  "type": "string",
                  "description": "user name hint"
                },
                "long_lived_requestor_id": {
                  "type": "string",
                  "description": "Requestor id of a long lived session"
                },
                "scopes": {
                  "type": "string",
                  "description": "Scopes being requested"
                }
              },
              "required": [
                "client_id"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": true,
        "description": "Limited to service users/built in clients.  See https://www.oauth.com/oauth2-servers/device-flow/.\n            \n            If initiating step up auth by providing acr_values, a valid session msut be provided via a Bearer token\n            \n            If a long lived session is requested both LongLivedRequestor and LongLivedRequestorId are required",
        "summary": "Initiate device code flow.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OAuth2DeviceCode"
            }
          }
        }
      }
    },
    "/OAuth2/EndSession": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "",
            "name": "post_logout_redirect_uri"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "",
            "name": "state"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "",
            "name": "id_token_hint"
          }
        ],
        "x-centrify-anon": true,
        "summary": "https://openid.net/specs/openid-connect-session-1_0.html#RPLogout",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OAuth2EndSession"
            }
          }
        }
      }
    },
    "/OAuth2/GetMeta": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Service name to use when gathering meta data.",
            "name": "serviceName"
          },
          {
            "schema": {
              "properties": {
                "customerid": {
                  "type": "object",
                  "description": "The id used to determine the tenant."
                }
              },
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": true,
        "summary": "Get meta",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OAuth2GetMeta"
            }
          }
        }
      }
    },
    "/OAuth2/Introspect": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "token": {
                  "type": "string",
                  "description": "The authentication token to process."
                }
              },
              "required": [
                "token"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": true,
        "description": "See the OAuth2 spec https://datatracker.ietf.org/doc/html/rfc7662#section-2",
        "summary": "Introspect.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OAuth2Introspect"
            }
          }
        }
      }
    },
    "/OAuth2/Keys": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "customerid": {
                  "type": "object",
                  "description": "The id used to determine the tenant."
                }
              },
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": true,
        "description": "See the OAuth2 spec https://oauth.net/2/",
        "summary": "Keys",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OAuth2Keys"
            }
          }
        }
      }
    },
    "/OAuth2/Revoke": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "parameters": [],
        "x-centrify-anon": true,
        "description": "See the OAuth2 spec https://oauth.net/2/",
        "summary": "Revoke.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OAuth2Revoke"
            }
          }
        }
      }
    },
    "/OAuth2/Token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "grant_type": {
                  "type": "string",
                  "description": "Grant what type of token."
                }
              },
              "required": [
                "grant_type"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": true,
        "description": "See the OAuth2 spec https://oauth.net/2/",
        "summary": "Gets a token based on grant type.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OAuth2Token"
            }
          }
        }
      }
    },
    "/OAuth2/UserInfo": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Scopes": {
                  "items": {
                    "type": "string",
                    "description": "A scope id."
                  },
                  "type": "array",
                  "description": "A list of scope ids."
                }
              },
              "required": [
                "Scopes"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "Not anonymous.\n            See the OAuth2 spec https://oauth.net/2/",
        "summary": "This returns the contents of the bearer token used.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/OAuth2UserInfo"
            }
          }
        }
      }
    },
    "/Radius/GetServer": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Get the RADIUS server details of given hostAddress",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/RadiusGetServer"
            }
          }
        }
      }
    },
    "/Radius/GetServers": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Get the list of RADIUS servers",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/RadiusGetServers"
            }
          }
        }
      }
    },
    "/Radius/GetUserIdentifierAttributes": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Get the user identifier attribute types.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/RadiusGetUserIdentifierAttributes"
            }
          }
        }
      }
    },
    "/Radius/RemoveServers": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "HostAddress": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "A list of radius hosts to remove."
                }
              },
              "required": [
                "HostAddress"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Remove radius servers.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/RadiusRemoveServers"
            }
          }
        }
      }
    },
    "/Radius/SetServer": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "HostDescription": {
                  "type": "string",
                  "description": "The description of the external RADIUS server."
                },
                "HostDisplayName": {
                  "type": "string",
                  "description": "The displayname of the external RADIUS server."
                },
                "HostPort": {
                  "type": "integer",
                  "description": "The port on the external RADIUS server."
                },
                "UserIdSubstAttr": {
                  "type": "integer",
                  "description": "see UsernameCustomType enum, from ExternalRadiusHelper"
                },
                "HostAddress": {
                  "type": "string",
                  "description": "The IP address of the server."
                },
                "ReceiveTimeout": {
                  "type": "integer",
                  "description": "The timeout for receiving a response from this server, in ms."
                },
                "HostCustomPromptMechChosen": {
                  "type": "string",
                  "description": "The custom prompt for answering RADIUS MFA."
                },
                "HostSharedSecret": {
                  "type": "string",
                  "description": "The shared secret to be used when connecting to the server."
                },
                "HostSilentInitialAnswer": {
                  "type": "string",
                  "description": "The answer to provide when the initial silent request is enabled."
                },
                "UserIdCustomSubstAttrName": {
                  "type": "string",
                  "description": "The name of the field to use for custom username."
                },
                "MaxAttempts": {
                  "type": "integer",
                  "description": "The maximum number of times to attempt the auth request."
                },
                "HostSilentInitialRequestEnabled": {
                  "type": "boolean",
                  "description": "Start Radius authentication calls with an initial, silent request"
                }
              },
              "required": [
                "HostDescription",
                "HostDisplayName",
                "UserIdSubstAttr",
                "HostAddress",
                "HostCustomPromptMechChosen",
                "HostSharedSecret",
                "UserIdCustomSubstAttrName"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Configures a Radius server.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/RadiusSetServer"
            }
          }
        }
      }
    },
    "/Swagger/V1": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": true,
        "summary": "Provides the auto-generated, JSON formatted, Swagger 2.0 documentation for the Delinea Identity Service API.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/SwaggerV1"
            }
          }
        }
      }
    },
    "/TenantConfig/DeleteAdminSecurityQuestion": {
      "post": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Uuid of the question to delete.",
            "name": "Id"
          },
          {
            "schema": {
              "properties": {
                "Id": {
                  "type": "string",
                  "description": "Uuid of the question to delete"
                }
              },
              "required": [
                "Id"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Delete admin security question.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/TenantConfigDeleteAdminSecurityQuestion"
            }
          }
        }
      }
    },
    "/TenantConfig/GetAdminSecurityQuestion": {
      "post": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Uuid of the question.",
            "name": "Id"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Get a specific admin security question",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/TenantConfigGetAdminSecurityQuestion"
            }
          }
        }
      }
    },
    "/TenantConfig/GetAdminSecurityQuestions": {
      "post": {
        "tags": [
          "User Management"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Get admin security questions",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/TenantConfigGetAdminSecurityQuestions"
            }
          }
        }
      }
    },
    "/TenantConfig/GetConfig": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": true,
        "summary": "Get tenant configuration.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/TenantConfigGetConfig"
            }
          }
        }
      }
    },
    "/TenantConfig/GetConfigForUpdate": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Get tenant configuration for updating.  Includes values for all supported lanagauges.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/TenantConfigGetConfigForUpdate"
            }
          }
        }
      }
    },
    "/TenantConfig/GetSecurityConfig": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Get tenant security configuration.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/TenantConfigGetSecurityConfig"
            }
          }
        }
      }
    },
    "/TenantConfig/ResetPortalConfig": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Reset portal configuration.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/TenantConfigResetPortalConfig"
            }
          }
        }
      }
    },
    "/TenantConfig/SetAdminSecurityQuestion": {
      "post": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Culture": {
                  "default": "all",
                  "type": "string",
                  "description": "Culture of the question to add."
                },
                "Question": {
                  "type": "string",
                  "description": "Test of the question to add."
                }
              },
              "required": [
                "Question"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Add admin security question.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/TenantConfigSetAdminSecurityQuestion"
            }
          }
        }
      }
    },
    "/TenantConfig/SetCustomerConfig": {
      "post": {
        "tags": [
          "Core Services"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "GlobalImage": {
                  "type": "string",
                  "description": "The tenant global image."
                },
                "CompanyName": {
                  "type": "string",
                  "description": "The tenant company name."
                },
                "LoginSampleText": {
                  "type": "string",
                  "description": "The tenant login sample text."
                },
                "IsOriginValidationOnGetEnabled": {
                  "type": "boolean",
                  "description": "Enable origin validation on get requests for this tenant."
                },
                "SendPasswordChangeConfirmation": {
                  "type": "boolean",
                  "description": "Enable sending password change confirmation for this tenant."
                },
                "LoginBackgroundImage": {
                  "type": "string",
                  "description": "The tenant login background image."
                },
                "FastSearchEnabledEntities": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "Enable fast search entities."
                },
                "TermsOfUseLink": {
                  "type": "string",
                  "description": "The tenant terms of use link."
                },
                "PortalImage": {
                  "type": "string",
                  "description": "The tenant portal image."
                },
                "ForgotUsernameAllowed": {
                  "type": "boolean",
                  "description": "Enable forgotten user name for this tenant."
                },
                "EnableUmc": {
                  "type": "boolean",
                  "description": "Enable Umc for this tenant."
                },
                "NavigationColor": {
                  "type": "string",
                  "description": "The tenant navigation color."
                },
                "OtpCodeLength": {
                  "type": "integer",
                  "description": "Defines the Otp code length for this tenant."
                },
                "ThemeColor": {
                  "type": "string",
                  "description": "The tenant theme color."
                },
                "WelcomeMessage": {
                  "type": "string",
                  "description": "The tenant welcome message."
                },
                "PrivacyPolicyLink": {
                  "type": "string",
                  "description": "The tenant privacy policy link."
                },
                "AllowCors": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": ""
                },
                "LoginImage": {
                  "type": "string",
                  "description": "The tenant login image."
                },
                "IsOriginValidationEnabled": {
                  "type": "boolean",
                  "description": "Enable origin validation for this tenant."
                },
                "Icon": {
                  "type": "string",
                  "description": "The tenant icon."
                },
                "EmailImage": {
                  "type": "string",
                  "description": "The tenant email image."
                },
                "MfaAttributeMapping": {
                  "type": "object",
                  "description": "The tenant mfa attibute mappings."
                },
                "BackgroundColor": {
                  "type": "string",
                  "description": "The tenant background color."
                }
              },
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Set a tenant configuration.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/TenantConfigSetCustomerConfig"
            }
          }
        }
      }
    },
    "/UserMgmt/CanEditUserAttributes": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "User UUID or name to check (default=current user)",
            "name": "ID"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "Directory service UUID of the user (default=null)",
            "name": "directoryServiceUuid"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Check to see if a user can edit attributes.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtCanEditUserAttributes"
            }
          }
        }
      }
    },
    "/UserMgmt/ChangeUserAttributes": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "CmaRedirectedUserUuid": {
                  "type": "string",
                  "description": "Reidrected user uuid"
                },
                "ID": {
                  "type": "string",
                  "description": "User UUID or name to set redirection for"
                }
              },
              "required": [
                "ID"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Update user attributes",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtChangeUserAttributes"
            }
          }
        }
      }
    },
    "/UserMgmt/ChangeUserPassword": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "oldPassword": {
                  "type": "string",
                  "description": "Current password"
                },
                "newPassword": {
                  "type": "string",
                  "description": "New password"
                }
              },
              "required": [
                "oldPassword",
                "newPassword"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Change the password for the current user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtChangeUserPassword"
            }
          }
        }
      }
    },
    "/UserMgmt/CheckUserProfileChallenge": {
      "post": {
        "tags": [
          "Cloud User Management",
          "User Management"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "description": "Responds with challenge exception if a challenge is necessary, or success: true if it is not.",
        "summary": "Check if a user profile challenge is required for the current user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtCheckUserProfileChallenge"
            }
          }
        }
      }
    },
    "/UserMgmt/GetAdminInviteLink": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {},
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "Allowed for only vaultbroker or Sys Admin user",
        "summary": "Get the user invite link for cloudadmin user.\n            Used for proviosning with SSC.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtGetAdminInviteLink"
            }
          }
        }
      }
    },
    "/UserMgmt/GetGroupAttributes": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Group UUID or Name to fetch attributes",
            "name": "ID"
          }
        ],
        "x-centrify-anon": false,
        "description": "Attributes within ServiceProperties will vary depending on the type of the directory service of the group.",
        "summary": "Fetch attributes for a specified group consumeable by UI.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtGetGroupAttributes"
            }
          }
        }
      }
    },
    "/UserMgmt/GetSecurityQuestions": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "User id",
            "name": "id"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "are admin questions to be added",
            "name": "addAdminQuestions"
          },
          {
            "schema": {
              "properties": {
                "addAdminQuestions": {
                  "default": false,
                  "type": "boolean",
                  "description": "Add list of available administrator questions in response"
                },
                "Id": {
                  "type": "string",
                  "description": "User UUID or name to get security questions for"
                }
              },
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "Specified user must be you or you must have user management permissions.",
        "summary": "Get security questions for the current user",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtGetSecurityQuestions"
            }
          }
        }
      }
    },
    "/UserMgmt/GetUserAttributes": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "User UUID or name to fetch attributes for (default=current user)",
            "name": "ID"
          }
        ],
        "x-centrify-anon": false,
        "description": "Attributes within ServiceProperties will vary depending on the type of the directory service of the user.",
        "summary": "Fetch attributes for a specified user consumeable by UI.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtGetUserAttributes"
            }
          }
        }
      }
    },
    "/UserMgmt/GetUserGroups": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "UUID or name of User",
            "name": "id"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Gets user's groups in a UI friendly result",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtGetUserGroups"
            }
          }
        }
      }
    },
    "/UserMgmt/GetUserHierarchy": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "User UUID to fetch hierarchy for (default=current user)",
            "name": "ID"
          }
        ],
        "x-centrify-anon": false,
        "description": "Attributes will vary depending on the type of the directory service the user belongs to.",
        "summary": "Fetch the reporting hierarchy for a specified user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtGetUserHierarchy"
            }
          }
        }
      }
    },
    "/UserMgmt/GetUserInfo": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "User UUID to fetch attributes for (default=current user)",
            "name": "ID"
          }
        ],
        "x-centrify-anon": false,
        "description": "Specified user must be you or you must be a system administrator or have user management permissions.  Note that this call is somewhat costly and its use should be minimized (cache the results as needed).",
        "summary": "Get additional info for a specified user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtGetUserInfo"
            }
          }
        }
      }
    },
    "/UserMgmt/GetUserPicture": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "User UUID or name to fetch picture for",
            "name": "ID"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "description": "UUID of the user's directory service (default=null)",
            "name": "directoryServiceUuid"
          }
        ],
        "produces": [
          "file"
        ],
        "x-centrify-anon": false,
        "description": "Specified user must be you or you must be a system administrator or have user management permissions.",
        "summary": "Fetch a cloud user's picture.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtGetUserPicture"
            }
          }
        }
      }
    },
    "/UserMgmt/GetUserPreferences": {
      "post": {
        "tags": [
          "Cloud User Management",
          "User Management"
        ],
        "parameters": [],
        "x-centrify-anon": false,
        "summary": "Get the user preferences.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtGetUserPreferences"
            }
          }
        }
      }
    },
    "/UserMgmt/InviteUsers": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "SmsInvite": {
                  "type": "boolean",
                  "description": "Send SMS invitations to invited entities if possible (default=false)"
                },
                "Entities": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array",
                  "description": "Users or groups to invite; each entry is a dictionary including 'Type' (User, Group, Role), 'Guid' (entity UUID), and 'Name' (entity name, only applicable to User entities)"
                },
                "Role": {
                  "type": "string",
                  "description": "Add each invited user to this role name if specified (default=null)"
                },
                "GroupInvite": {
                  "type": "boolean",
                  "description": "For invited groups, send a single email invitation to the group rather than to each user within the group (default=true)"
                },
                "EmailInvite": {
                  "type": "boolean",
                  "description": "Send email invitations to invited entities if possible (default=true)"
                }
              },
              "required": [
                "Entities"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have user management permissions.",
        "summary": "Invite one or more users to the cloud portal.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtInviteUsers"
            }
          }
        }
      }
    },
    "/UserMgmt/IsUserCloudLocked": {
      "post": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The name or uuid of the user to check.",
            "name": "user"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator, have user management permissions, or be checking yourself.",
        "summary": "Checks to see if a given user is cloud locked.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtIsUserCloudLocked"
            }
          }
        }
      }
    },
    "/UserMgmt/IsUserLockedOutByPolicy": {
      "post": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The name or uuid of the user to test. Pass an empty string to test the\n            currently logged-in user.  Note that only administrative users can test other users.",
            "name": "user"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Determine if the current user can (or cannot...) satisfy the requisite MFA challenges.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtIsUserLockedOutByPolicy"
            }
          }
        }
      }
    },
    "/UserMgmt/IsUserSubjectToCloudLocks": {
      "post": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The name or uuid of the user to check.",
            "name": "user"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator, have user management permissions, or be checking yourself.",
        "summary": "Checks to see if a given user is subject to cloud locks.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtIsUserSubjectToCloudLocks"
            }
          }
        }
      }
    },
    "/UserMgmt/RemoveUser": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The name or UUID of the user to remove.",
            "name": "ID"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have user management permissions.  Will delete cloud users.  Users for other directory services are only removed from the cloud.\n            This API will fail if the id specified is the current user.",
        "summary": "Remove a user from the cloud.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtRemoveUser"
            }
          }
        }
      }
    },
    "/UserMgmt/RemoveUsers": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Users": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of user UUIDs to send invitations to"
                }
              },
              "required": [
                "Users"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have user management permissions.  Will delete cloud users.  Users for other directory services are only removed from the cloud.\n            This API will fail if any of the ids specified are the current user.",
        "summary": "Remove one or more users.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtRemoveUsers"
            }
          }
        }
      }
    },
    "/UserMgmt/ResetSecurityQuestions": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Id": {
                  "type": "string",
                  "description": "User UUID or name to reset security questions for"
                }
              },
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "Specified user must be you or you must have user management permissions.",
        "summary": "Resets (clears) security questions for a user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtResetSecurityQuestions"
            }
          }
        }
      }
    },
    "/UserMgmt/ResetUserPassword": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "ID": {
                  "type": "string",
                  "description": "User UUID or name to set password for, defaults to current user"
                },
                "newPassword": {
                  "type": "string",
                  "description": "New password"
                }
              },
              "required": [
                "newPassword"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "Specified user must be you or you must be a system administrator or have user management permissions.\n            If specified user is self, current password state must require reset",
        "summary": "Reset the password for current or a specified user (does not require valid current password).\n            Used for lost password or expired password cases.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtResetUserPassword"
            }
          }
        }
      }
    },
    "/UserMgmt/SendLoginEmail": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "User UUID to send invitation to",
            "name": "ID"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Should the user receiving the login mail also have their password expired? Default = true",
            "name": "Expire"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator.",
        "summary": "Send email invitation to a specified user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtSendLoginEmail"
            }
          }
        }
      }
    },
    "/UserMgmt/SendLoginEmails": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "ID": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of user UUIDs to send invitations to"
                }
              },
              "required": [
                "ID"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator.",
        "summary": "Send invitation emails to one or more users.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtSendLoginEmails"
            }
          }
        }
      }
    },
    "/UserMgmt/SetCloudLock": {
      "post": {
        "tags": [
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "The name or uuid of the user to set the lock on.",
            "name": "user"
          },
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Should the user be locked or unlocked?",
            "name": "lockUser"
          }
        ],
        "x-centrify-anon": false,
        "description": "You must be a system administrator or have user management permissions. The locked user will have all auth sessions removed and OAuth2 tokens revoked.",
        "summary": "Applies or clears a cloud lock for a given user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtSetCloudLock"
            }
          }
        }
      }
    },
    "/UserMgmt/SetPhonePin": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "ID": {
                  "type": "string",
                  "description": "User UUID or name to set security question for"
                },
                "phonepin": {
                  "type": "string",
                  "description": "Phone pin"
                }
              },
              "required": [
                "ID",
                "phonepin"
              ],
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Set the phone pin for a user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtSetPhonePin"
            }
          }
        }
      }
    },
    "/UserMgmt/UncacheUserPreferences": {
      "post": {
        "tags": [
          "Cloud User Management",
          "User Management"
        ],
        "parameters": [
          {
            "required": true,
            "in": "query",
            "type": "string",
            "description": "Unique identifier or name of user.",
            "name": "userUuidOrName"
          }
        ],
        "x-centrify-anon": false,
        "summary": "Uncache the user preferences.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtUncacheUserPreferences"
            }
          }
        }
      }
    },
    "/UserMgmt/UpdateSecurityQuestions": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "Added": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array",
                  "description": "List of entities specifying questions to add.  Each question entity has the following properties: 'Uuid' (string, uuid of admin question) -OR- 'QuestionText' (string, text of user question), 'Answer' (string, text of answer)"
                },
                "Id": {
                  "type": "string",
                  "description": "User UUID or name to update security questions for"
                },
                "Deleted": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "description": "List of Uuids of questions to delete"
                },
                "Replace": {
                  "default": false,
                  "type": "boolean",
                  "description": "Replace all existing questions with this update."
                }
              },
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Updates security questions for a user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtUpdateSecurityQuestions"
            }
          }
        }
      }
    },
    "/UserMgmt/UpdateUserPreferences": {
      "post": {
        "tags": [
          "User Management",
          "Cloud User Management"
        ],
        "parameters": [
          {
            "schema": {
              "properties": {
                "PreferredCulture": {
                  "type": "string",
                  "description": "Centrify supported culture code. Use Core/GetSupportedCultures for a list. Set to an empty string to remove the user's preferred culture."
                }
              },
              "type": "object"
            },
            "required": true,
            "in": "body",
            "name": "payload"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-centrify-anon": false,
        "summary": "Updates various user preferences for the currently logged in user.",
        "responses": {
          "200": {
            "description": "API-Result",
            "schema": {
              "$ref": "#/definitions/UserMgmtUpdateUserPreferences"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "RadiusGetServers": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Resulting object, if any, of the call"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "RadiusRemoveServers": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Results from the removal of the radius servers.",
          "type": "object",
          "properties": {
            "RemovedServers": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "A list of radius hosts removed."
            },
            "Removed": {
              "type": "integer",
              "description": "The count of radius servers removed"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreUpdateProxyCode": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "True if the code was updated, false otherwise",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "RadiusSetServer": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard JSON response.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OathResetCentrifyOathProfile": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Did the profile get reset.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OathSaveProfile": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Saved user profile.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtSendLoginEmails": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtGetUserHierarchy": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "User Attributes results",
          "type": "object",
          "properties": {
            "propertyn": {
              "type": "object",
              "description": "nth property of the user (name varies)"
            },
            "property2": {
              "type": "object",
              "description": "Second property of the user (name varies)"
            },
            "directoryServiceUuid": {
              "type": "string",
              "description": "UUID of the directory service the user is from"
            },
            "...": {
              "type": "object",
              "description": "More properties (name varies)"
            },
            "property1": {
              "type": "object",
              "description": "First property of the user (name varies)"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OathGetProfileListForDevice": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "The profile list for a device.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreAddPremDetectRange": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Did the IP range add succeed.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitiesgroup": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of Group IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "RadiusGetServer": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Resulting object, if any, of the call"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "SwaggerV1": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "JSON formatted Swagger 2.0",
          "type": "object",
          "properties": {
            "tags": {
              "items": {
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description of the tag."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the tag."
                  }
                },
                "type": "object"
              },
              "type": "array",
              "description": "Convenience tags used for categorizing the types of paths available in the API"
            },
            "x_explorer_enabled": {
              "type": "boolean",
              "description": "Is the 'Try it out' button enabled?"
            },
            "definitions": {
              "type": "object",
              "description": "Generated definitions of available paths containing description and responses"
            },
            "swagger": {
              "type": "string",
              "description": "Tenant id of the user"
            },
            "info": {
              "properties": {
                "termsOfService": {
                  "type": "string",
                  "description": "Terms of Service link for the Delinea Identity Service API"
                },
                "title": {
                  "type": "string",
                  "description": "Delinea Identity Service API title"
                },
                "version": {
                  "type": "string",
                  "description": "Build version for this specific Swagger 2.0"
                },
                "description": {
                  "type": "string",
                  "description": "Delinea Identity Service API description"
                }
              },
              "type": "object",
              "description": "Info regarding the Delinea Identity Service API"
            },
            "paths": {
              "type": "object",
              "description": "Available public paths in the Delinea Identity Service API"
            },
            "schemes": {
              "type": "string",
              "description": "Supported HTTP schemes for the Delinea Identity Service API"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreGetProxyIwaHostCertificateFile": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "FileResult containing the connector Iwa host certificate.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OathAddOrUpdateProfile": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard JSON response.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreGetProxySettings": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "The connector settings.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CDirectoryServiceGetUser": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Cloud user details.",
          "type": "object",
          "properties": {
            "HomeNumber": {
              "type": "string",
              "description": "User home phone number"
            },
            "Alias": {
              "type": "string",
              "description": "Login suffix of the user"
            },
            "ReportsTo": {
              "type": "string",
              "description": "User reports to user UUID."
            },
            "PasswordNeverExpire": {
              "type": "boolean",
              "description": "Does the user's password never expire?"
            },
            "PictureUri": {
              "type": "string",
              "description": "File system path to user picture file"
            },
            "DisplayName": {
              "type": "string",
              "description": "User display name"
            },
            "Uuid": {
              "type": "string",
              "description": "User UUID"
            },
            "OfficeNumber": {
              "type": "string",
              "description": "User office phone number"
            },
            "LastPasswordChangeDate": {
              "format": "date-time",
              "type": "string",
              "description": "Date/time user last changed their password"
            },
            "MobileNumber": {
              "type": "string",
              "description": "User mobile phone number"
            },
            "InEverybodyRole": {
              "type": "boolean",
              "description": "Is user in the Everybody role?"
            },
            "PreferredCulture": {
              "type": "string",
              "description": "User preferred culture"
            },
            "State": {
              "type": "string",
              "description": "User state (locked, enabled, expired)"
            },
            "Mail": {
              "type": "string",
              "description": "User email"
            },
            "Description": {
              "type": "string",
              "description": "User description"
            },
            "Name": {
              "type": "string",
              "description": "User name"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "TenantConfigDeleteAdminSecurityQuestion": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "AuthProfileSaveProfile": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "An authentication profile.",
          "type": "object",
          "properties": {
            "Challenges": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Selected authentication mechanisms."
            },
            "AdditionalData": {
              "type": "object",
              "description": "DataEntity with additional data (default=null)."
            },
            "Uuid": {
              "type": "string",
              "description": "Profile UUID."
            },
            "DurationInMinutes": {
              "type": "integer",
              "description": "How many minutes the profile is valid."
            },
            "Name": {
              "type": "string",
              "description": "Profile name."
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "LocalGroupsGetLocalGroupMembers": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "LocalGroup principal list (each list entry has these properties)",
          "type": "object",
          "properties": {
            "Guid": {
              "type": "string",
              "description": "Principal UUID"
            },
            "Type": {
              "type": "string",
              "description": "Principal type, one of 'User', 'Group', or 'LocalGroup'"
            },
            "Name": {
              "type": "string",
              "description": "Principal name"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitiesusersidOrNamegroups": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of group (Local and/or Directory) IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtChangeUserPassword": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OAuth2Introspect": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Normalized information about the token.",
          "type": "object",
          "properties": {
            "exp": {
              "type": "string",
              "description": "When does the token expire."
            },
            "scope": {
              "type": "string",
              "description": "The scope of the token."
            },
            "sub": {
              "type": "string",
              "description": "The user's unique identifier."
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtInviteUsers": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitiesquery": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of User and Group IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "LocalGroupsDeleteLocalGroups": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "RadiusGetUserIdentifierAttributes": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "The list of user identifier attribute types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OathValidateOtpCode": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Is the otp code valid.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreDeleteProxyCode": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Was the code removed.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreSetProxyIwaHostCertificateFile": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "The connector that got its certificate set",
          "type": "object",
          "properties": {
            "HttpPort": {
              "type": "integer",
              "description": "Hyper text transport port number."
            },
            "Port": {
              "type": "integer",
              "description": "Port number for the connector."
            },
            "WebProxyEnabled": {
              "type": "boolean",
              "description": "Should the web connector be enabled."
            },
            "CertThumbprint": {
              "type": "string",
              "description": "certificate thumbprint"
            },
            "WebProxyPort": {
              "type": "integer",
              "description": "The port used by the web connector."
            },
            "Enabled": {
              "type": "boolean",
              "description": "Is the connector enabled."
            },
            "IwaCheckTimeout": {
              "type": "integer",
              "description": "The Iwa timeout value to use."
            },
            "Name": {
              "type": "string",
              "description": "The proxies name."
            },
            "Hostname": {
              "type": "string",
              "description": "The host name of the connector."
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "TenantConfigSetCustomerConfig": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard JSON response.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "LocalGroupsDeleteLocalGroup": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreDeleteProxy": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Did the connector removal succeed.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtIsUserCloudLocked": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OAuth2Keys": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "A list of keys",
          "type": "array",
          "items": {
            "description": "A certificate key",
            "type": "object",
            "properties": {
              "kty": {
                "description": "The type of key.",
                "type": "string"
              },
              "alg": {
                "description": "The algorithm of the key.",
                "type": "string"
              },
              "use": {
                "description": "The use of key.",
                "type": "string"
              },
              "kid": {
                "description": "The thumbprint of key.",
                "type": "string"
              }
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CDirectoryServiceChangeUser": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Success or failure of the change.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtResetSecurityQuestions": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreGenerateNewProxyCode": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Current tenant id dash just created connector id.",
          "type": "string"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreGetProxyCode": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "The reservation code entity",
          "type": "string"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreUpdateDirectoryServicesPrecedence": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Did the directory services precedence update succeed.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtIsUserLockedOutByPolicy": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "True if the user is locked out (i.e. cannot answer MFA challenges), false otherwise.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreDeleteProxyCodes": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard JSON response.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "TenantConfigGetConfigForUpdate": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Full tenant configuration.",
          "type": "object",
          "properties": {
            "EnableCustomLink": {
              "type": "boolean",
              "description": "Are custom links enabled?"
            },
            "PrivacyPolicyLink": {
              "type": "string",
              "description": "URL to tenant privacy policy."
            },
            "LoginSampleText": {
              "type": "string",
              "description": "Login sample text."
            },
            "CustomLinkTitle2": {
              "type": "string",
              "description": "Title of custom link 2"
            },
            "CustomLinkUrl1": {
              "type": "string",
              "description": "URL of custom link 1"
            },
            "CustomLinkUrl2": {
              "type": "string",
              "description": "URL of custom link 2"
            },
            "ForgotUserNameAllowed": {
              "type": "boolean",
              "description": "Is forgot user name allowed?"
            },
            "TermsOfUseLink": {
              "type": "string",
              "description": "URL to tenant terms of use."
            },
            "CustomLinkTitle1": {
              "type": "string",
              "description": "Title of custom link 1"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitiesusersidOrName": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "User IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "InternalAddUsersAndGroupsToLocalGroup": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Json result containing UUID of the local group for which principals were added.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreDeleteProxies": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Did the connector removals succeed.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "HealthCheck": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "200 on yes, 503 on no, and a report.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OathGetProfileList": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Resulting object, if any, of the call"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "AuthProfileGetProfileList": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of Authentication profiles.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "An Authentication profile.",
            "properties": {
              "Uuid": {
                "description": "Profile UUID.",
                "type": "string"
              },
              "Name": {
                "description": "Profile name.",
                "type": "string"
              },
              "DurationInMinutes": {
                "description": "How many minutes the profile is valid.",
                "type": "integer"
              },
              "Challenges": {
                "description": "Selected authentication mechanisms.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "AdditionalData": {
                "description": "DataEntity with additional data (default=null).",
                "type": "object"
              }
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreGetProxies": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of connectors.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "TenantConfigResetPortalConfig": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard JSON response.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CDirectoryServiceGetUserAttributes": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Cloud user details",
          "type": "object",
          "properties": {
            "HomeNumber": {
              "type": "string",
              "description": "User home phone number"
            },
            "Alias": {
              "type": "string",
              "description": "Login suffix of the user"
            },
            "ReportsTo": {
              "type": "string",
              "description": "User reports to user UUID."
            },
            "PasswordNeverExpire": {
              "type": "boolean",
              "description": "Does the user's password never expire?"
            },
            "PictureUri": {
              "type": "string",
              "description": "File system path to user picture file"
            },
            "DisplayName": {
              "type": "string",
              "description": "User display name"
            },
            "Uuid": {
              "type": "string",
              "description": "User UUID"
            },
            "OfficeNumber": {
              "type": "string",
              "description": "User office phone number"
            },
            "LastPasswordChangeDate": {
              "format": "date-time",
              "type": "string",
              "description": "Date/time user last changed their password"
            },
            "MobileNumber": {
              "type": "string",
              "description": "User mobile phone number"
            },
            "InEverybodyRole": {
              "type": "boolean",
              "description": "Is user in the Everybody role?"
            },
            "State": {
              "type": "string",
              "description": "User state (locked, enabled, expired)"
            },
            "Mail": {
              "type": "string",
              "description": "User email"
            },
            "Description": {
              "type": "string",
              "description": "User description"
            },
            "Name": {
              "type": "string",
              "description": "User name"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreAddEntraIDInstance": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "True if sucessfully added",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "TenantConfigGetAdminSecurityQuestions": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "\n              List of Admin Security Questions; each entry is has the following properties\n              {\n                description: \"Admin Security Question\",\n                properties: {\n                  Uuid: { description: \"Question Uuid\", type: \"string\" },\n                  Question: { \"description\": \"Text of the question\", type: \"string\" }\n                  Culture: { \"description\": \"Culture of the question, 'all' implies all cultures\", type: \"string\" }\n                }\n              }\n            ",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtUpdateUserPreferences": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtGetUserGroups": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of user groups",
          "type": "object",
          "properties": {
            "DirectoryServiceUuid": {
              "type": "string",
              "description": "Directory service UUID"
            },
            "DisplayName": {
              "type": "string",
              "description": "display name"
            },
            "ServiceProperties": {
              "type": "object",
              "description": "Property bag of service specific properties"
            },
            "DirectoryServiceName": {
              "type": "string",
              "description": "Directrory service name"
            },
            "DistinguishedName": {
              "type": "string",
              "description": "distinguished name"
            },
            "UUID": {
              "type": "string",
              "description": "uuid"
            },
            "DirectoryInstanceName": {
              "type": "string",
              "description": "Directory service instance"
            },
            "Description": {
              "type": "string",
              "description": "description"
            },
            "Name": {
              "type": "string",
              "description": "pname"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtIsUserSubjectToCloudLocks": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitiesdirectorygroupsidOrName": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Group IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtCanEditUserAttributes": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "LocalGroupsAddUsersAndGroupsToLocalGroup": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CDirectoryServiceSetUserState": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Success or fail for the user state attempt.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtGetUserPreferences": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "The user preferences.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CDirectoryServiceGetUserByName": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Cloud user details.",
          "type": "object",
          "properties": {
            "HomeNumber": {
              "type": "string",
              "description": "User home phone number."
            },
            "Alias": {
              "type": "string",
              "description": "Login suffix of the user."
            },
            "ReportsTo": {
              "type": "string",
              "description": "User reports to user UUID."
            },
            "PasswordNeverExpire": {
              "type": "boolean",
              "description": "Does the user's password never expire."
            },
            "PictureUri": {
              "type": "string",
              "description": "File system path to user picture file."
            },
            "DisplayName": {
              "type": "string",
              "description": "User display name."
            },
            "Uuid": {
              "type": "string",
              "description": "User UUID."
            },
            "OfficeNumber": {
              "type": "string",
              "description": "User office phone number."
            },
            "LastPasswordChangeDate": {
              "format": "date-time",
              "type": "string",
              "description": "Date/time user last changed their password."
            },
            "MobileNumber": {
              "type": "string",
              "description": "User mobile phone number."
            },
            "InEverybodyRole": {
              "type": "boolean",
              "description": "Is user in the Everybody role."
            },
            "PreferredCulture": {
              "type": "string",
              "description": "User preferred culture."
            },
            "State": {
              "type": "string",
              "description": "User state (locked, enabled, expired)."
            },
            "Mail": {
              "type": "string",
              "description": "User email."
            },
            "Description": {
              "type": "string",
              "description": "User description."
            },
            "Name": {
              "type": "string",
              "description": "User name."
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtSendLoginEmail": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OAuth2GetMeta": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "ContentResult that describes the service name meta data.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CDirectoryServiceRefreshToken": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitiesusersidOrNamedirectorygroups": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of directory group IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreRemoveEntraIDInstance": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Did the Entra ID instance removal succeed.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OathValidateAndSetUserThirdPartyOtp": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitiesusersidOrNamelocalgroups": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of local group IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CDirectoryServiceCreateUsers": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of users with their UUID's.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "User name, email, UUID, and/or error.",
            "properties": {
              "Name": {
                "description": "Name of user.",
                "type": "string"
              },
              "Email": {
                "description": "Email of user.",
                "type": "string"
              },
              "Uuid": {
                "description": "UUID of user, will be null on create failure",
                "type": "string"
              },
              "Error": {
                "description": "Error text if user create failed; will be null on create success",
                "type": "string"
              }
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CDirectoryServiceExemptUserFromMfa": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitiesdirectorygroupsidOrNamemembership": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Group IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitiesgroupsidOrName": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Group IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "LocalGroupsStoreLocalGroup": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "LocalGroup UUID"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitiesgroups": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of Group IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtRemoveUser": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OathUpdateOathProfileCounter": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Did the profile counter get updated.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "LocalGroupsUpdateLocalGroup": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CDirectoryServiceCreateUser": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "UUID of the created user.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OathGetDataFromCsvFile": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "The file contents in query result format.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OAuth2DeviceCode": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Device code repsonse",
          "type": "object",
          "properties": {
            "expires_in": {
              "type": "integer",
              "description": "Time in seconds until device code expires"
            },
            "device_code": {
              "type": "string",
              "description": "Device code identifier"
            },
            "interval": {
              "type": "integer",
              "description": "Polling interval in seconds"
            },
            "verification_uri": {
              "type": "string",
              "description": "URI user will use to verify code"
            },
            "user_code": {
              "type": "string",
              "description": "Code to display to user"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "LocalGroupsGetLocalGroup": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "LocalGroup information",
          "type": "object",
          "properties": {
            "DirectoryServiceUuid": {
              "type": "string",
              "description": "UUID of the Directory Service owning the localgroup"
            },
            "Principals": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "List of priciapls who are members of the localgroup.  Each principal is of the form t=id, where 't' is one of 'u' (user), 'g' (group), or 'r' (localgroup) and 'id' is the principal name."
            },
            "Uuid": {
              "type": "string",
              "description": "LocalGroup UUID"
            },
            "LocalGroupType": {
              "type": "string",
              "description": "LocalGroup type, one of Everybody or PrincipalList"
            },
            "ReadOnly": {
              "type": "boolean",
              "description": "Is localgroup read only?"
            },
            "Description": {
              "type": "string",
              "description": "LocalGroup description"
            },
            "Name": {
              "type": "string",
              "description": "LocalGroup name"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CDirectoryServiceGetUsers": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of all cloud users.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "A cloud user.",
            "properties": {
              "Uuid": {
                "description": "User UUID.",
                "type": "string"
              },
              "Name": {
                "description": "User name.",
                "type": "string"
              },
              "DisplayName": {
                "description": "User display name.",
                "type": "string"
              },
              "Description": {
                "description": "User description.",
                "type": "string"
              },
              "Mail": {
                "description": "User email.",
                "type": "string"
              },
              "OfficeNumber": {
                "description": "User office phone number.",
                "type": "string"
              },
              "MobileNumber": {
                "description": "User mobile phone number.",
                "type": "string"
              },
              "HomeNumber": {
                "description": "User home phone number.",
                "type": "string"
              },
              "ReportsTo": {
                "description": "User reports to user UUID.",
                "type": "string"
              },
              "PictureUri": {
                "description": "File system path to user picture file.",
                "type": "string"
              },
              "PreferredCulture": {
                "description": "User preferred culture.",
                "type": "string"
              }
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreGeneratePassword": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "The generated password.",
          "type": "string"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtChangeUserAttributes": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "TenantConfigGetAdminSecurityQuestion": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "\n              Admin Security Question withs the following properties\n              {\n                description: \"Admin Security Question\",\n                properties: {\n                  Uuid: { description: \"Question Uuid\", type: \"string\" },\n                  Question: { \"description\": \"Text of the question\", type: \"string\" },\n                  Culture: { \"description\": \"Culture of the question, 'all' implies all cultures\", type: \"string\" }\n                }\n              }\n            ",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "TenantConfigSetAdminSecurityQuestion": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitiesgroupsidOrNamemembership": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Group IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitiesfetchbulk": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of User and Group IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OAuth2UserInfo": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "The contents of the bearer token.",
          "type": "object",
          "properties": {
            "aud": {
              "type": "string",
              "description": "The profile client id."
            },
            "Uuid": {
              "type": "string",
              "description": "The unique identifier for the user."
            },
            "unique_name": {
              "type": "string",
              "description": "The user name."
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtCheckUserProfileChallenge": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitieslocalgroupsidOrName": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Group IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreDelPremDetectRange": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Did the IP range delete succeed.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitiesdirectorygroups": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of Group IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreUpdateProxySettings": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "The connector that got set.",
          "type": "object",
          "properties": {
            "HttpPort": {
              "type": "integer",
              "description": "Hyper text transport port number."
            },
            "Port": {
              "type": "integer",
              "description": "Port number for the connector."
            },
            "WebProxyEnabled": {
              "type": "boolean",
              "description": "Should the web connector be enabled."
            },
            "CertThumbprint": {
              "type": "string",
              "description": "Certificate thumbprint."
            },
            "WebProxyPort": {
              "type": "integer",
              "description": "The port used by the web connector."
            },
            "Enabled": {
              "type": "boolean",
              "description": "Is the connector enabled."
            },
            "IwaCheckTimeout": {
              "type": "integer",
              "description": "The Iwa timeout value to use."
            },
            "Name": {
              "type": "string",
              "description": "The proxies name."
            },
            "Hostname": {
              "type": "string",
              "description": "The host name of the connector."
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OAuth2Authorize": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "ActionResult from processing the request.",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CDirectoryServiceSetUserPicture": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "URI path to the user's picture.",
          "type": "string"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtGetAdminInviteLink": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Email link with OTP in Result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "LocalGroupsGetPagedLocalGroupMembers": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtGetGroupAttributes": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Group Attributes results",
          "type": "object",
          "properties": {
            "DirectoryServiceUuid": {
              "type": "string",
              "description": "Directory service UUID"
            },
            "DisplayName": {
              "type": "string",
              "description": "display name"
            },
            "ServiceProperties": {
              "type": "object",
              "description": "Property bag of service specific properties"
            },
            "DirectoryServiceName": {
              "type": "string",
              "description": "Directrory service name"
            },
            "DistinguishedName": {
              "type": "string",
              "description": "distinguished name"
            },
            "UUID": {
              "type": "string",
              "description": "uuid"
            },
            "DirectoryInstanceName": {
              "type": "string",
              "description": "Directory service instance"
            },
            "Description": {
              "type": "string",
              "description": "description"
            },
            "Name": {
              "type": "string",
              "description": "pname"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitieslocalusers": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of User IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OathDeleteProfiles": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Were the profiles deleted.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtGetUserAttributes": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "User Attributes results",
          "type": "object",
          "properties": {
            "DirectoryServiceUuid": {
              "type": "string",
              "description": "Directory service UUID"
            },
            "MfaRedirectUserName": {
              "type": "string",
              "description": "MFA redirect user name"
            },
            "DirectoryInstanceName": {
              "type": "string",
              "description": "Directory service instance"
            },
            "EmailAddress": {
              "type": "string",
              "description": "email"
            },
            "StatusDescription": {
              "type": "string",
              "description": "user status/state description"
            },
            "Name": {
              "type": "string",
              "description": "name"
            },
            "MobileNumber": {
              "type": "string",
              "description": "mobile phone number"
            },
            "MfaRedirectUserUuid": {
              "type": "string",
              "description": "MFA redirect user UUID"
            },
            "CloudState": {
              "type": "string",
              "description": "cloud lock state; will be null if SubjectToCloudLocks is false"
            },
            "ServiceUser": {
              "type": "boolean",
              "description": "Is a service User"
            },
            "FirstName": {
              "type": "string",
              "description": "first name"
            },
            "OfficeNumber": {
              "type": "string",
              "description": "office phone number"
            },
            "ReportsTo": {
              "type": "string",
              "description": "Reporting manager name"
            },
            "Status": {
              "type": "string",
              "description": "user status/state"
            },
            "DistinguishedName": {
              "type": "string",
              "description": "distinguished name"
            },
            "HomeNumber": {
              "type": "string",
              "description": "home phone number"
            },
            "CanEditUserAttributes": {
              "type": "boolean",
              "description": "can the user edit attributes"
            },
            "DisplayName": {
              "type": "string",
              "description": "display name"
            },
            "DirectoryServiceName": {
              "type": "string",
              "description": "Directrory service name"
            },
            "PreferredCulture": {
              "type": "string",
              "description": "prefered locale"
            },
            "SubjectToCloudLocks": {
              "type": "boolean",
              "description": "Is the user subject to cloud locks?"
            },
            "ServiceProperties": {
              "type": "object",
              "description": "Property bag of service specific properties"
            },
            "State": {
              "type": "string",
              "description": "state (locked, expired, etc)"
            },
            "HasPicture": {
              "type": "boolean",
              "description": "has a user picture"
            },
            "MfaRedirectUserDisplayName": {
              "type": "string",
              "description": "MFA redirect user display name"
            },
            "LastLogin": {
              "type": "string",
              "description": "user last login timestamp"
            },
            "LastName": {
              "type": "string",
              "description": "last name"
            },
            "UUID": {
              "type": "string",
              "description": "uuid"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OathGetUserThirdPartyOtp": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "DataEntity containg 3rd party OTP profile information",
          "type": "object",
          "properties": {
            "ProfileUuid": {
              "type": "string",
              "description": "The UUID of the user's 3rd party OATH profile"
            },
            "UrlQr": {
              "type": "string",
              "description": "QR image to be scanned by 3rd party OATH application for setup"
            },
            "Url": {
              "type": "string",
              "description": "The url for the 3rd party OATH application"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "AuthProfileGetProfile": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Authentication profile.",
          "type": "object",
          "properties": {
            "Challenges": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Selected authentication mechanisms."
            },
            "AdditionalData": {
              "type": "object",
              "description": "DataEntity with additional data (default=null)."
            },
            "Uuid": {
              "type": "string",
              "description": "Profile UUID."
            },
            "DurationInMinutes": {
              "type": "integer",
              "description": "How many minutes the profile is valid."
            },
            "Name": {
              "type": "string",
              "description": "Profile name."
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CorePingProxy": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "No result if ping succeeded, else throws ProxyPingFailedException",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitieslocalgroupsidOrNamemembership": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Group IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtGetUserPicture": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "User's picture file if one is available",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OAuth2Token": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "The token",
          "type": "object",
          "properties": {
            "expires_in": {
              "type": "integer",
              "description": "How long is the token good."
            },
            "scope": {
              "type": "string",
              "description": "The scope of the token."
            },
            "access_token": {
              "type": "string",
              "description": "The token unique identifier."
            },
            "token_type": {
              "type": "string",
              "description": "The type of token."
            },
            "id_token": {
              "type": "string",
              "description": "The token id."
            },
            "refresh_token": {
              "type": "string",
              "description": "The token refresh."
            },
            "state": {
              "type": "string",
              "description": "The state of the token."
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtGetUserInfo": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "User additional information",
          "type": "object",
          "properties": {
            "EmailAddress": {
              "type": "string",
              "description": "User email address"
            },
            "Id": {
              "type": "string",
              "description": "User UUID"
            },
            "TenantId": {
              "type": "string",
              "description": "Tenant id of the user"
            },
            "PasswordExpDate": {
              "format": "date-time",
              "type": "string",
              "description": "Date/time user's password will expire"
            },
            "Name": {
              "type": "string",
              "description": "User name"
            },
            "MobileNumber": {
              "type": "string",
              "description": "User mobile phone number"
            },
            "LastPasswordChangeDate": {
              "format": "date-time",
              "type": "string",
              "description": "Last date/time user changed their password"
            },
            "SecurityKeyConfigured": {
              "type": "boolean",
              "description": "Has the user configured a U2F Security Key?"
            },
            "DirectoryServiceType": {
              "type": "string",
              "description": "Directory service type"
            },
            "IsSysAdmin": {
              "type": "boolean",
              "description": "Is user a system administrator"
            },
            "PhonePinLastChangeDate": {
              "format": "date-time",
              "type": "string",
              "description": "Date/time user last set their phone PIN"
            },
            "PasswordChangeHardHours": {
              "type": "integer",
              "description": "Hours before a user should be prompted to change an near to expiring password"
            },
            "CanChangePassword": {
              "type": "boolean",
              "description": "Can user change their password"
            },
            "DistinguishedName": {
              "type": "string",
              "description": "Distinguished name of the user"
            },
            "EnablePurchasedLicenseMenu": {
              "type": "boolean",
              "description": "Does the user have the right to view licenses?"
            },
            "ThirdPartyOathConfigured": {
              "type": "boolean",
              "description": "Has a third party OATH token been configured for this user?"
            },
            "SecurityQuestion": {
              "type": "string",
              "description": "Does user have security questions?  'yes' if so, null if not"
            },
            "DisplayName": {
              "type": "string",
              "description": "User display name"
            },
            "PasswordChangeSoftDays": {
              "type": "integer",
              "description": "Days before a user should be warned to change a near to expiring password"
            },
            "PasswordResetFlag": {
              "type": "integer",
              "description": "Password reset state: 0=no reset needed, 1=Reset required, 2=Reset optional, 3=Reset warning"
            },
            "DirectoryServiceName": {
              "type": "string",
              "description": "Directory service name"
            },
            "PreferredCulture": {
              "type": "string",
              "description": "User's preferred culture if any in culture code format (e.g. fr)"
            },
            "SecurityQuestionsLastUpdate": {
              "format": "date-time",
              "type": "string",
              "description": "Date/time user last updated their security questions"
            },
            "DisplayPreferredCulture": {
              "type": "string",
              "description": "User's preferred culture if any in display format (e.g. French - français) "
            },
            "Settings": {
              "type": "object",
              "description": "Contains internal state for the Portal Web UI; this property can be ignored."
            },
            "HasPicture": {
              "type": "boolean",
              "description": "User has a picture available"
            },
            "MfaSetupWizardSettings": {
              "type": "object",
              "description": "Contains settings that guide MFA setup"
            },
            "DirectoryServiceId": {
              "type": "string",
              "description": "Directory service UUID"
            },
            "DirectoryServiceLocalizedName": {
              "type": "string",
              "description": "Directory service name localized to user's preferred language"
            },
            "SqEnabled": {
              "type": "boolean",
              "description": "Are security questions enabled for this user"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CDirectoryServiceCreateUserBulk": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Success or fail for the bulk import attempt",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OAuth2EndSession": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Resulting object, if any, of the call"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtUncacheUserPreferences": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Did the user preferences cache get flushed.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtResetUserPassword": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitieslocalgroups": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of Group IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "entitiesusers": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "List of User IdentityEntity",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtSetPhonePin": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtRemoveUsers": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreGetDirectoryServices": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "The directory services in UI Query Response format.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "Service": {
                "description": "The service name.",
                "type": "string"
              },
              "Name": {
                "description": "The data service name.",
                "type": "string"
              },
              "Tenant": {
                "description": "The current tenant id.",
                "type": "string"
              },
              "Everybody": {
                "description": "Can everybody use this service.",
                "type": "boolean"
              },
              "Description": {
                "description": "Description of the data service.",
                "type": "string"
              },
              "directoryServiceUuid": {
                "description": "Unique identifier for the directory service.",
                "type": "string"
              },
              "Config": {
                "description": "The directory service configuration summary.",
                "type": "string"
              },
              "DisplayName": {
                "description": "The display name to use for this service.",
                "type": "string"
              },
              "DisplayNameShort": {
                "description": "Localized version of the display name.",
                "type": "string"
              },
              "Status": {
                "description": "Status of the service.",
                "type": "string"
              },
              "StatusDisplay": {
                "description": "Localized version of the status.",
                "type": "string"
              }
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "TenantConfigGetSecurityConfig": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "A tenant security configuration.",
          "type": "object",
          "properties": {
            "PhoneCallsEnabled": {
              "type": "boolean",
              "description": "Are phone calls enabled?"
            },
            "OtpCodeLength": {
              "type": "integer",
              "description": "Lenght of OTP/SMS codes."
            },
            "SendPasswordChangeConfirmation": {
              "type": "boolean",
              "description": "Send email when a user password changes"
            },
            "ForgotUserNameAllowed": {
              "type": "boolean",
              "description": "Is forgot user name allowed?"
            },
            "EmailSystemEnabled": {
              "type": "boolean",
              "description": "Is email enabled?"
            },
            "SmsSystemEnabled": {
              "type": "boolean",
              "description": "Is SMS enabled?"
            },
            "SlackSystemEnabled": {
              "type": "boolean",
              "description": "is Slack enabled?"
            },
            "MfaAttributeMapping": {
              "type": "object",
              "description": "Additional MFA attributes"
            },
            "DisableAndroidCBA": {
              "type": "boolean",
              "description": "Disable Android certificate usage."
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreGetPremDetectRanges": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "A list of IP Ranges in UI Query Response format.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OathResynchronizeOathToken": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "AuthProfileDeleteProfile": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Success or failure of the delete",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtUpdateSecurityQuestions": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OAuth2Revoke": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Did the revoke work.",
          "type": "boolean"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtSetCloudLock": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "UserMgmtGetSecurityQuestions": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "DataEntity with user security questions data",
          "type": "object",
          "properties": {
            "AnswerMinLength": {
              "type": "integer",
              "description": "Minimum length in characters of answers"
            },
            "Questions": {
              "properties": {
                "Uuid": {
                  "type": "string",
                  "description": "Question identifier"
                },
                "QuestionText": {
                  "type": "string",
                  "description": "Question text"
                }
              },
              "type": "object",
              "description": "Security questions for user; list of entities with following properties."
            },
            "MaxQuestions": {
              "type": "integer",
              "description": "Max questions allowed for user"
            },
            "MinAdminQuestions": {
              "type": "integer",
              "description": "Minimum admin questions required for user"
            },
            "AdminQuestions": {
              "properties": {
                "Culture": {
                  "type": "string",
                  "description": "Culture of the question, 'all' implies all cultures"
                },
                "Uuid": {
                  "type": "string",
                  "description": "Question Uuid"
                },
                "Question": {
                  "type": "string",
                  "description": "Text of the question"
                }
              },
              "type": "object",
              "description": "Available administrator questions; list of entities with following properties."
            },
            "MinUserQuestions": {
              "type": "integer",
              "description": "Minimum user questions required for user"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "CoreGetProxyCodes": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "QueryResult in UI format.",
          "type": "string"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "OathGetAllProfilesList": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "A list of profiles in query response format.",
          "type": "array",
          "items": {
            "description": "An import profile.",
            "type": "object"
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "LocalGroupsRemoveUsersAndGroupsFromLocalGroup": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "Standard result",
          "type": "object"
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    },
    "TenantConfigGetConfig": {
      "properties": {
        "ErrorID": {
          "type": "string",
          "description": "Unique support identifier for this occurrence of an error"
        },
        "Result": {
          "description": "A tenant configuration.",
          "type": "object",
          "properties": {
            "EnableCustomLink": {
              "type": "boolean",
              "description": "Are custom links enabled?"
            },
            "PrivacyPolicyLink": {
              "type": "string",
              "description": "URL to tenant privacy policy."
            },
            "LoginSampleText": {
              "type": "string",
              "description": "Login sample text."
            },
            "CustomLinkTitle2": {
              "type": "string",
              "description": "Title of custom link 2"
            },
            "CustomLinkUrl1": {
              "type": "string",
              "description": "URL of custom link 1"
            },
            "CustomLinkUrl2": {
              "type": "string",
              "description": "URL of custom link 2"
            },
            "ForgotUserNameAllowed": {
              "type": "boolean",
              "description": "Is forgot user name allowed?"
            },
            "TermsOfUseLink": {
              "type": "string",
              "description": "URL to tenant terms of use."
            },
            "CustomLinkTitle1": {
              "type": "string",
              "description": "Title of custom link 1"
            }
          }
        },
        "Message": {
          "type": "string",
          "description": "Error message text on failure, may be null"
        },
        "success": {
          "type": "boolean",
          "description": "Indicates API success or failure"
        }
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Please enter a valid Bearer token. Example: 'Bearer {token}'"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
